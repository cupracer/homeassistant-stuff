blueprint:
  name: Lower radiator temperature with opened closure
  description:
    An automation blueprint that lowers the set temperature of your climate device or group 
    when a contact sensor remains open for longer than the predefined wait time. 
    It utilizes the Homematic window sensor channel to adjust the temperature to the 
    "open window temperature" specified in the device configuration. 
    To avoid conflicts, you should set the "Mode for temperature fall detection" to Inactive. 
    It waits until the contact is closed again to restore the climate entity's temperature. 
    Additionally, there's an optional blocking entity to prevent the automation 
    from running unnecessarily, such as during the summer season.
    It is currently commented out in the code and can be activated when needed.
    
  domain: automation
  source_url: https://github.com/cupracer/homeassistant-stuff/blueprints/lower-radiator-temperature-with-opened-closure.yaml
  
  input:
    contact_entity:
      name: Contact Sensor
      description: The contact sensor that will control the climate entity.
      selector:
        entity:
          domain: binary_sensor
          device_class: [window, door]

    open_delay:
      name: Open Wait Time
      description: Time to delay after contact opens before notifying HomeMatic.
      default: 0
      selector:
        number:
          min: 0.0
          max: 600.0
          unit_of_measurement: seconds
          mode: slider
          step: 1.0

#    blocking_entity:
#      name: (OPTIONAL) Blocking Entity
#      description: If this entity's state is on, it will prevent the automation from running. E.g. summer mode or away mode.
#      default:
#      selector:
#        entity:
#          domain: input_boolean

    climate_entity:
      name: Climate Device
      description: The climate entity that is controlled by the contact sensor.
      selector:
        entity:
          domain: climate

variables:
#  blocking_entity: !input blocking_entity
  climate_target: !input climate_entity
  climate_address: '{{ state_attr( climate_target, "address").split(":")[0] }}'
  open_delay: !input open_delay

trigger:
  - platform: state
    entity_id: !input "contact_entity"
    to: "on"
    for: !input "open_delay"

# condition:
#   - condition: template
#     value_template: "{{ (blocking_entity == none) or (states[blocking_entity].state == 'off') }}"

action:
  - service: homematicip_local.set_device_value
    data:
      device_address: "{{ climate_address }}"
      channel: 1
      parameter: WINDOW_STATE
      value: "1"
      value_type: int

  - wait_for_trigger:
      - platform: state
        entity_id: !input "contact_entity"
        to: "off"
    continue_on_timeout: false

  - service: homematicip_local.set_device_value
    data:
      device_address: "{{ climate_address }}"
      channel: 1
      parameter: WINDOW_STATE
      value: "0"
      value_type: int

mode: restart
max_exceeded: silent
