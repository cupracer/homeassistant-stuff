blueprint:
  name: Control radiator temperature with closure
  description:
    An automation blueprint that adjusts the set temperature of your climate device or group
    based on the state of a contact sensor. When a contact sensor is opened, the temperature is lowered 
    to the "open window temperature" specified in the device configuration. Once the contact sensor is 
    closed again, the temperature is reset to its previous value.

    This blueprint utilizes the Homematic window sensor channel to ensure precise temperature 
    adjustments. To avoid conflicts, it is recommended to set the "Mode for temperature fall detection" 
    to Inactive. 

    Additionally, there's an optional blocking entity to prevent the automation from running 
    unnecessarily, such as during the summer season. This feature is currently commented out in the 
    code but can be activated if needed.
  domain: automation
  source_url: https://github.com/cupracer/homeassistant-stuff/blueprints/radiator-temperature-control.yaml
  
  input:
    contact_entity:
      name: Contact Sensor
      description: The contact sensor that will control the climate entity.
      selector:
        entity:
          domain: binary_sensor
          device_class: [window, door]

    climate_entity:
      name: Climate Device
      description: The climate entity that is controlled by the contact sensor.
      selector:
        entity:
          domain: climate

variables:
  climate_target: !input climate_entity
  climate_address: '{{ state_attr( climate_target, "address").split(":")[0] }}'

trigger:
  - platform: state
    entity_id: !input "contact_entity"

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input contact_entity
            state: "on"
        sequence:
          - service: homematicip_local.set_device_value
            data:
              device_address: "{{ climate_address }}"
              channel: 1
              parameter: WINDOW_STATE
              value: "1"
              value_type: int
      - conditions:
          - condition: state
            entity_id: !input contact_entity
            state: "off"
        sequence:
          - service: homematicip_local.set_device_value
            data:
              device_address: "{{ climate_address }}"
              channel: 1
              parameter: WINDOW_STATE
              value: "0"
              value_type: int

mode: restart
max_exceeded: silent

